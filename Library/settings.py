"""
Django settings for Library project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9$%9agb95c)u%mrtvnvfjy$na*1r3n+lm-p1ibz16v7b0)jk8+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True   #True=during development, False= during production

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',# no models required
    'django.contrib.staticfiles', # no models required
    'Book', #user defined
    'second',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Library.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Library.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'library',  # snehal123$Library
        'USER': 'root',#snehal123
        'PASSWORD': 'root', # Swapnil@8
        'HOST': 'localhost', # snehal123.mysql.pythonanywhere-services.com
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



import os
import logging
# from logging.handlers import TimedRotatingFileHandler
# from logging.handlers import RotatingFileHandler


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '[%(asctime)s]---[%(levelname)s]---%(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
            },
        'complex': {
            'format': '%(asctime)s---%(process)d---[%(levelname)s]---%(message)s',
            'datefmt': '%d:%b:%Y %H:%M:%S %p'
            },
        },

    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'level':'INFO',
        },
        'f_file': {
            'class': 'logging.FileHandler',
            'level':'DEBUG',
            'filename': "H:\\snehal\\Django\\Library\\logs\\first.log",
            'formatter': 'simple'
        },
        's_file': {
            'class': 'logging.FileHandler',
            'level':'DEBUG',
            'filename': "H:\\snehal\\Django\\Library\\logs\\second.log",
            'formatter': 'complex'
        },
        'timed_rotate': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': "H:\\snehal\\Django\\Library\\logs\\timed_rotate.log",
            'when' : 'S', 
            'interval':1,
            'backupCount' : 5,
            'formatter': 'complex'
        },
        'rotate_file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': "H:\\snehal\\Django\\Library\\logs\\rotate_file.log",
            'maxBytes': 50, 
            'backupCount': 5,
            'formatter': 'simple'
        },
    },

    'loggers': {
        'first': {
            'handlers': ['console', 'f_file'],   # timed_rotate 
            'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
            'propagate': False,
        },

        'second': {
            'handlers': ['console', 'rotate_file'],   #complex=s_file  timed_rotate
            'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
            'propagate': False,
        },
    },

}